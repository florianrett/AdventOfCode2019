import InputGetter as IG

input = "#....#.....#...#.#.....#.#..#....#,#..#..##...#......#.....#..###.#.#,#......#.#.#.....##....#.#.....#..,..#.#...#.......#.##..#...........,.##..#...##......##.#.#...........,.....#.#..##...#..##.....#...#.##.,....#.##.##.#....###.#........####,..#....#..####........##.........#,..#...#......#.#..#..#.#.##......#,.............#.#....##.......#...#,.#.#..##.#.#.#.#.......#.....#....,.....##.###..#.....#.#..###.....##,.....#...#.#.#......#.#....##.....,##.#.....#...#....#...#..#....#.#.,..#.............###.#.##....#.#...,..##.#.........#.##.####.........#,##.#...###....#..#...###..##..#..#,.........#.#.....#........#.......,#.......#..#.#.#..##.....#.#.....#,..#....#....#.#.##......#..#.###..,......##.##.##...#...##.#...###...,.#.....#...#........#....#.###....,.#.#.#..#............#..........#.,..##.....#....#....##..#.#.......#,..##.....#.#......................,.#..#...#....#.#.....#.........#..,........#.............#.#.........,#...#.#......#.##....#...#.#.#...#,.#.....#.#.....#.....#.#.##......#,..##....#.....#.....#....#.##..#..,#..###.#.#....#......#...#........,..#......#..#....##...#.#.#...#..#,.#.##.#.#.....#..#..#........##...,....#...##.##.##......#..#..##...."

test = ".#..#,.....,#####,....#,...##"
test2 = "......#.#.,#..#.#....,..#######.,.#.#.###..,.#..#.....,..#....#.#,#..#....#.,.##.#..###,##...#..#.,.#....####"
test3 = "#.#...#.#.,.###....#.,.#....#...,##.#.#.#.#,....#.#.#.,.##..###.#,..#...##..,..##....##,......#...,.####.###."
test4 = ".#..#..###,####.###.#,....###.#.,..###.##.#,##.##.#.#.,....###..#,..#.#..#.#,#..#.#.###,.##...##.#,.....#.#.."
test5 = ".#..##.###...#######,##.############..##.,.#.######.########.#,.###.#######.####.#.,#####.##.#.##.###.##,..#####..#.#########,####################,#.####....###.#.#.##,##.#################,#####.##.###..####..,..######..##.#######,####.##.####...##..#,.#####..#.######.###,##...#.##########...,#.##########.#######,.####.#.###.###.#.##,....##.##.###..#####,.#.#.###########.###,#.#.#.#####.####.###,###.##.####.##.#..##"

# Functions
# o: origin
# l: location to be tested
def IsBlocked(o, l):
    for a in asteroids:
        #print(o, a, l)
        if a != o and a != l:

            if a[0] == o[0]:
                if a[0] == l[0] and (l[1] - o[1]) / (a[1] - o[1]) > 1:
                    return True
            elif a[1] == o[1]:
                if a[1] == l[1] and (l[0] - o[0]) / (a[0] - o[0]) > 1:
                    return True
            else:
                d = a[0] - o[0]
                f = (l[0] - o[0]) / d
                if f > 1:
                    d1 = a[1] - o[1]
                    f1 = (l[1] - o[1]) / d1
                    if f == f1:
                        return True
                                
    return False

# =================================================================================================================================================
# Actual Programm

split = IG.GetInput(10)

grid = []
asteroids = []

# =================================================================================================================================================
# Part 1
print("Starting Programm")

#generate grid
for l in split:
    line = []
    for c in l:
        line.append(c)
    grid.append(line)

#generate list with asteroids
for i in range(grid.__len__()):
    for j in range(grid[i].__len__()):
        if grid[i][j] == '#':
            asteroids.append((j, i))

maxNum = 0
maxAs = (0, 0)
for as1 in asteroids:
    num = 0
    #for as2 in asteroids:
    #    if as1 != as2:
    #        if IsBlocked(as1, as2) == False:
    #            num += 1
    #if num > maxNum:
    #    maxNum = num
    #    maxAs = as1


print("Part 1: Asteroid ", maxAs, " with ", maxNum)

# =================================================================================================================================================
#Part 2
print("Starting Part 2")



print("Part 2: ")